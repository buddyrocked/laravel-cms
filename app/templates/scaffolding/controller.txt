<?php

class $NAME$ extends \BaseController {

	/**
	 * Display a listing of $COLLECTION$
	 *
	 * @return Response
	 */
	public function index()
	{
		$this->layout->title = 'List $COLLECTION$';

		$$COLLECTION$ = $MODEL$::orderBy('id','ASC');

		if(Input::has('name')):
			$$COLLECTION$->where('name','like','%'.Input::get('name').'%');
			$$COLLECTION$ = $$COLLECTION$->paginate(10);
			$pagination = $$COLLECTION$->appends(array('name'=>Input::get('name')))->links();
		else:
			$$COLLECTION$ = $$COLLECTION$->paginate(10);
			$pagination = $$COLLECTION$->links();
		endif;

		$this->layout->breadcrumb = array(
									        array(
									            'title' => 'Dashboard',
									            'link' => URL::current(),
									            'icon' => 'glyphicon-home'
									        ),
									        array(
									            'title' => 'List $COLLECTION$',
									            'link' => URL::current(),
									            'icon' => 'glyphicon-list-alt'
									        )
									    );
		$this->layout->content = View::make('$COLLECTION$.index', compact('$COLLECTION$', 'pagination'));
	}

	/**
	 * Show the form for creating a new $RESOURCE$
	 *
	 * @return Response
	 */
	public function create()
	{
		$this->layout->title = 'New $COLLECTION$';
		$this->layout->breadcrumb = array(
									        array(
									            'title' => 'Dashboard',
									            'link' => URL::current(),
									            'icon' => 'glyphicon-home'
									        ),
									        array(
									            'title' => 'List $COLLECTION$',
									            'link' => URL::route('$COLLECTION$-list'),
									            'icon' => 'glyphicon-list-alt'
									        ),
									        array(
									            'title' => 'New Post',
									            'link' => URL::current(),
									            'icon' => 'glyphicon-plus'
									        )
									    );
		$this->layout->content = View::make('$COLLECTION$.create');
	}

	/**
	 * Store a newly created $RESOURCE$ in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		$validator = Validator::make($data = Input::all(), $MODEL$::$rules);

		if ($validator->fails())
		{
			return Redirect::back()->withErrors($validator)->withInput();
		}

		$MODEL$::create($data);

		Session::flash('message', 'Input Berhasil.');
		return Redirect::route('$COLLECTION$.index');
	}

	/**
	 * Display the specified $RESOURCE$.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$$RESOURCE$ = $MODEL$::findOrFail($id);
		$this->layout->title = 'detail $COLLECTION$';
		$this->layout->content = View::make('$COLLECTION$.show', compact('$RESOURCE$'));
	}

	/**
	 * Show the form for editing the specified $RESOURCE$.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$$RESOURCE$ = $MODEL$::find($id);
		$this->layout->title = 'edit post';
		$this->layout->breadcrumb = array(
									        array(
									            'title' => 'Dashboard',
									            'link' => URL::current(),
									            'icon' => 'glyphicon-home'
									        ),
									        array(
									            'title' => 'List Posts',
									            'link' => URL::route('$COLLECTION$-list'),
									            'icon' => 'glyphicon-list-alt'
									        ),
									        array(
									            'title' => 'Edit $COLLECTION$ - '.$id,
									            'link' => URL::current(),
									            'icon' => 'glyphicon-pencil'
									        )
									    );

		$this->layout->content = View::make('$COLLECTION$.edit', compact('$RESOURCE$'));
	}

	/**
	 * Update the specified $RESOURCE$ in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$$RESOURCE$ = $MODEL$::findOrFail($id);

		$validator = Validator::make($data = Input::all(), $MODEL$::$rules);

		if ($validator->fails())
		{
			return Redirect::back()->withErrors($validator)->withInput();
		}

		$$RESOURCE$->update($data);
		Session::flash('message', 'Update Berhasil');
		return Redirect::route('$COLLECTION$.index');
	}

	/**
	 * Remove the specified $RESOURCE$ from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$MODEL$::destroy($id);
		Session::flash('message', 'Update Berhasil');
		return Redirect::route('$COLLECTION$.index');
	}

}
